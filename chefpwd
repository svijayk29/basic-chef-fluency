
centos7 chef server lab installation
chef-server-ctl reconfigure
chef-server-ctl user-create  vijay  vijay roark vijay.roark@gmail.com 'Ramana29@' --filename vijay-user-rsa
username vijay
fullname vijay roark
email vijay.roark@gmail.com
password 'Ramana29@'
 --filename vijay-user-rsa

 chef-server-ctl org-create roarkent 'roark enterprises' --association_user vijay --filenam roarkent-validator-pem


organization name roarkent
fullname'roark enterprises'
 --association_user vijay
 --filename roarkent-validator.pem

chef-server-ctl install chef-manage
chef-manage-ctl reconfigure
knife ssl check - successful
bootstrapping a node(needs internet connection)
knife bootstrap 192.168.1.212  -N webserver --ssh-user vijay --sudo
"chefpwd"

create github account
username svijayk29
vijay.roark@gmail.com
ramana29
created a new repository basic-chef-fluency
now back at workstation
git init
git add .
git commit -am "first commit" (a for all and m is for message)
git config --global user-email "vijay.roark@gmail.com" (just once)
git config --global user-name " vijay"  (just once)

git remote add origin https://github.com/svijayk29/basic-chef-fluency.git (just once)

git push -u origin master

creating a new cookbook and uploading to github

knife cookbook create learn
git add .
git commit -am "adding cookbook learn" (a for all and m is for message)
git push -u origin master

creating a new cookbook called apache and uploading to webserver node

chef generate cookbook cookbooks/apache
amend default.rb file to install, start and enable apache2
create new recipe call websites.rb to create a personalized index page

upload the cookbook

knife cookbook upload apache

add to git hub by the above commands

knife node list command shows nodes running

to add a run list to a node

knife node run_list add webserver 'recipe[apache]'

to show various attributes of node
knife node show webserver

knife node show -l webserver(all)

dry run command


 chef-client --why-run

then to implement default.rb
chef-client

make changes to default.rb to include websites file and upload
knife cookbook upload apache
chef-client   (to see the custom index file)

next remove include_file command from default.rb file and put in a seperate run list

knife node run_list add webserver 'recipe[apache::websites]'

next i tried removing the index file with action :delete and then uploaded the cookbook to node

knife cookbook upload apache

knife node run_list add webserver 'recipe[apache::websites]' -b 'recipe[apache]

knife node run_list add webserver 'recipe[apache::websites]' -a 'recipe[apache]

knife node run_list remove  webserver 'recipe[apache::websites], recipe[apache]'

edited default.rb file to include an if condition for centos and apache by using node attribute(platform)

created a new file motd.rb with a file attribute to display a message using node attriute(hostname) and using a variable to hold the hostname

changed metadata file to version 0.2.1

uploaded to git

knife cookbook upload apache

knife node run_list add webserver 'recipe[motd]'

then run chef-client on node webserver as root)otherwise fails because cant find key)

Missing Cookbooks:
------------------
The following cookbooks are required by the client but don't exist on the server:
* motd

go back to work station and 
$knife node run_list remove webserver 'recipe[motd]'
and
$knife node run_list add webserver 'recipe[apache::motd]'

result is

webserver:
  run_list:
    recipe[apache]
    recipe[apache::websites]
    recipe[apache::motd]

now go back to node webserver and run

chef-client 

if condition didnt work properly even thoough apache2 installed started and index page changed. But chef was also looking for httpd service to start(this is based on my own addition to recipe. i need to  fix it. didnt create motd file either.

fixed all errors by creating two if conditions. worked on ubu and now going to bootstrap centos and test
bootstrap succeeded but chef-client failed to run runlists correctly
The problem was with the code for httpd package installation code. Cleaned it up and worked perfectly on centos too.
SEARCH -
knife search index 'key:string'
knife search 'platform_family:rhel' 
knife search 'recipes:apache'
knife search 'recipes:apache\:\:motd'
knife search 'recipes:apache\:\:*'
knife search 'p?atform:ubuntu' -a hostname
knife search 'p?atform:centos' -a platform_family
knife search "*.*" -a ipaddress
knife search "*.*" -a run_list
knife search "*.*" -a recipes
bootstrapping a new node centdbserver 
knife bootstrap 192.168.1.215  -N centdbserver1 --ssh-user vijay --sudo
after bootstrapping, we will generate a new cookbook as we are going install and start postgresql on our centdbserver1
chef generate cookbook postgresql
we then cd into recipes and open up default.rb to put the following recipe in
and then push it to github
Next we learn on how to create roles
we then go to chef-manage and remove runlists from centwebserver3 and ubwebserver1
we go back to workstation and set the editor variable so that chef templates(for roles) open in that editor
export EDITOR=$(which vim)
to make the change persistent we add to .bashrc file
export EDITOR=$(which vim)
knife role create web
added recipes to runlist in the template that opened up and saved and then -Created role[webserver]
knife cookbook upload postgresql
knife role create dbserver
updated runlist with cookbook postgresql, saved and then
Created role[dbserver]
to edit a role
knife role edit webserver
next assiging nodes to roles
knife node run_list set web1 "role[web]"( using node name rather than hostname)
#knife node run_list set centwebserver3 "role[webserver]"
before this assignment there are no runlists on these servers(were removed through chef-manage)
I can test by running chef-client on both servers
worked perfectly
Next I want to run chef-clients of all nodes with role=webserver
knife ssh "role:web" "sudo chef-client" -x vijay -P  
knife ssh "role:dbserver" "sudo chef-client" -x vijay -P(worked)
knife ssh "role:dbserver" "systemctl status postgresql" -x vijay -P(worked)
Now we are going to learn search function  in a run list
we have amemded the websites file to add code for a node to display its information when you run chef-client on that node
Next environments
created a node called staging annd bootstrapping it with the command
knife  bootstrap 192.168.1.219 -N staging -x vijay --sudo
we can use the command knife node list to show how many nodes are runnin
knife node run_list add staging 'role[web]'
knife role show web
create a new version of apache cookbook(through metadata.rb) and upload the new vrsion
we can then create two different environments production , staging and assign appropriate version to each environment

